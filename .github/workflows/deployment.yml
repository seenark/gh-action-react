name: Deploy Project
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  POSTGRES_URL: postgres://postgres:postgres@localhost:5432/postgres
  PORT: 3000
jobs:
  lint:
    env:
      POSTGRES_URL: postgres://postgres:postgres@localhost:5432/postgres
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Echo PORT from ENV
        run: echo "PORT:$PORT"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.8
      - name: Install Dependencies
        run: bun i
      - name: Run ESLint
        run: bun run lint
  build:
    needs:
      - lint
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.find-js.outputs.script-file }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.8
      - name: Install Dependencies
        run: bun i
      - name: Build Project
        run: bun run build
      - name: Publish JS filename
        id: find-js
        run: echo "script-file=$(find dist/assets/*.js -type f -execdir echo '{}' ';' | head -n 1)" >> $GITHUB_OUTPUT
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files # any name you like
          path: |
            dist
            public
            package.json

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files # same name as above for this example it should be `dist-files`
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
